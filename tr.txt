task.spawn(function()
    task.spawn(function()
    local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")


local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://18462892217"
local Anim = Humanoid:LoadAnimation(AnimAnim)
AnimAnim.AnimationId = "rbxassetid://0"
Anim:Play()

wait(1)

local function stringToCFrame(str)
	local components = {str:match("([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)")}
	for i = 1, #components do
		components[i] = tonumber(components[i])
	end
	return CFrame.new(unpack(components))
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:FindFirstChild("Torso")
local workspace = game:GetService("Workspace")


local resourcesFolder = ReplicatedStorage:FindFirstChild("Resources")
if not resourcesFolder then return end


local fiveSeasonsFX = resourcesFolder:FindFirstChild("FiveSeasonsFX")
if not fiveSeasonsFX then return end


local jumpFXModel = fiveSeasonsFX:FindFirstChild("JumpFX")
if not jumpFXModel then return end


local jumpFXPart = jumpFXModel:FindFirstChild("JumpFX")
if not jumpFXPart then return end


local clonedJumpFX = jumpFXPart:Clone()
clonedJumpFX.Parent = workspace


local function emitParticles(instance)
    for _, child in ipairs(instance:GetDescendants()) do
        if child:IsA("ParticleEmitter") then
            child.Enabled = true
            child:Emit(1)
            child.Enabled = false
        end
    end
end


local function positionOnFloor(part)
    if torso then
        local torsoPosition = torso.Position
        local rayOrigin = torsoPosition + Vector3.new(0, 10, 0)
        local rayDirection = Vector3.new(0, -20, 0)
        local raycastResult = workspace:Raycast(rayOrigin, rayDirection)


        if raycastResult then
            part.Position = raycastResult.Position - Vector3.new(0, 0.9, 0)
        end
    end
end


emitParticles(clonedJumpFX)
positionOnFloor(clonedJumpFX)


Wait(3.5)


        local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.Attachment:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(20) -- Emit 20 particles
        end
        end
local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.a:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(20) -- Emit 20 particles
        end
        end
        local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(1) -- Emit 20 particles
        end
        end
        wait(2.1)
        red4:Destroy()
                        local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].EyeEmit:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Head"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(20) -- Emit 20 particles
        end
        end
                local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.Attachment:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(20) -- Emit 20 particles
        end
        end
local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.a:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(20) -- Emit 20 particles
        end
        end
                local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(1) -- Emit 20 particles
        end
        end
        wait(1.8)
        red4:Destroy()

-- Get the player and their character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:WaitForChild("Torso")


-- Function to find a descendant recursively by name
local function findDescendant(parent, name)
    local child = parent:FindFirstChild(name)
    if not child then
        for _, descendant in ipairs(parent:GetChildren()) do
            child = findDescendant(descendant, name)
            if child then
                break
            end
        end
    end
    return child
end


-- Function to duplicate a ParticleEmitter
local function duplicateEmitter(originalEmitter)
    local duplicate = originalEmitter:Clone()
    duplicate.Parent = originalEmitter.Parent
    duplicate.Rate = 20  -- Set the rate of the duplicated emitter to 100 initially
    return duplicate
end


-- Look for the tpthing ParticleEmitter
local replicatedStorage = game:GetService("ReplicatedStorage")
local resourcesFolder = replicatedStorage:WaitForChild("Resources", 2) -- Wait for 2 seconds if not immediately found
if resourcesFolder then
    local kjEffectsFolder = resourcesFolder:FindFirstChild("KJEffects")
    if kjEffectsFolder then
        local tpThingEmitter = findDescendant(kjEffectsFolder, "tpthing")
        if tpThingEmitter and tpThingEmitter:IsA("ParticleEmitter") then
            -- Duplicate the emitter
            local duplicatedEmitter = duplicateEmitter(tpThingEmitter)
            
            -- Parent the duplicated emitter to the character's torso
            duplicatedEmitter.Parent = torso
            print("Successfully parented duplicated tpthing ParticleEmitter to Torso and set Rate to 100.")
            
            -- Wait for 1.0 seconds
            wait(0.2)
            
            -- Set the rate of the duplicated emitter to 0
            duplicatedEmitter.Rate = 0
            print("Successfully set Rate of duplicated emitter to 0 after 1.0 seconds.")


        else
            warn("Could not find tpthing ParticleEmitter or it is not a ParticleEmitter.")
        end
    else
        warn("Could not find KJEffects folder inside Resources.")
    end
else
    warn("Could not find Resources folder inside ReplicatedStorage.")
end


Wait(0.2)


local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Get the player and their character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local leftArm = character:WaitForChild("Left Arm")


-- Check if the "ArmEnabled" object exists in the "Left Arm"
local armEnabled = leftArm:FindFirstChild("ArmEnabled")
if armEnabled then
    -- Remove the "ArmEnabled" object
    armEnabled:Destroy()
    print("Successfully removed ArmEnabled from Left Arm.")
else
    warn("Could not find ArmEnabled in Left Arm.")
end

local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")
local activated = false


Wait(3)


local red4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
red4.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(red4:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(5) -- Emit 20 particles
        end
        end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local Humanoid = character:WaitForChild("Humanoid")

-- Function to teleport player up and keep them suspended
local function teleportUpAndStay()
    local targetHeight = 100  -- teleport 100 studs up
    local targetPosition = humanoidRootPart.Position + Vector3.new(0, targetHeight, 0)
    local targetCFrame = CFrame.new(targetPosition)

    -- Move player up instantly
    humanoidRootPart.CFrame = targetCFrame

    -- Suspend player in the air indefinitely
    local function suspendInAir()
        humanoidRootPart.Velocity = Vector3.new(0, 0, 0) -- Freeze the player
        humanoidRootPart.CFrame = targetCFrame -- Maintain target position
    end

    -- Disable gravity and collisions temporarily
    Humanoid.PlatformStand = true

    RunService:BindToRenderStep("SuspendInAir", Enum.RenderPriority.Character.Value, suspendInAir)

    -- Play animation
    local AnimAnim = Instance.new("Animation")
    AnimAnim.AnimationId = "rbxassetid://18462894593"
    local Anim = Humanoid:LoadAnimation(AnimAnim)
    AnimAnim.AnimationId = "rbxassetid://0" -- Reset animation ID after loading
    Anim:Play()

    -- Clone and move model downwards after 3.7 seconds
    local function doTheCloneyStuff()
        local resourcesFolder = ReplicatedStorage:FindFirstChild("Resources")
        if not resourcesFolder then return end

        local fiveSeasonsFXFolder = resourcesFolder:FindFirstChild("FiveSeasonsFX")
        if not fiveSeasonsFXFolder then return end

        local modelToClone = fiveSeasonsFXFolder:FindFirstChild("FistsModelMirrored")
        if not modelToClone then return end

        local clonedModel = modelToClone:Clone()

        clonedModel.Parent = Workspace
        local startPosition = humanoidRootPart.CFrame * CFrame.new(0, 200, 0) -- 200 studs above the player's torso
        clonedModel:SetPrimaryPartCFrame(startPosition)

        -- Function to move the cloned model downwards
        local function moveDown()
            local targetPosition = humanoidRootPart.CFrame
            local function onRenderStep()
                if clonedModel.PrimaryPart.Position.Y > targetPosition.Position.Y then
                    clonedModel:SetPrimaryPartCFrame(clonedModel.PrimaryPart.CFrame * CFrame.new(0, -0.5, 0))
                else
                    clonedModel:SetPrimaryPartCFrame(targetPosition)
                    RunService:UnbindFromRenderStep("MoveDownModel")
                end
            end
            RunService:BindToRenderStep("MoveDownModel", Enum.RenderPriority.Character.Value, onRenderStep)
        end

        moveDown()

        -- Destroy the cloned model after 3.6 seconds
        delay(3.8, function()
            if clonedModel and clonedModel.Parent then
                clonedModel:Destroy()
            end
        end)
    end

    -- Delay for 3.7 seconds before cloning the model
    delay(3.7, doTheCloneyStuff)

    -- Ensure player comes back down after animation ends
    local animationLength = Anim.Length -- Length of the animation in seconds
    delay(animationLength, function()
        -- Re-enable gravity and collisions
        Humanoid.PlatformStand = false

        -- Allow player to fall naturally
        RunService:UnbindFromRenderStep("SuspendInAir")
    end)
end

teleportUpAndStay()

-- Reference the particle effect to be duplicated
local particleEffect = game.ReplicatedStorage.Resources.FiveSeasonsFX.CharFX.TP

-- Clone the particle effect
local clonedEffect = particleEffect:Clone()

-- Parent the cloned effect to the player's left arm
clonedEffect.Parent = game.Players.LocalPlayer.Character["HumanoidRootPart"]

-- Emit particles from all ParticleEmitters in the cloned effect
for _, child in ipairs(clonedEffect:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(5) -- Emit 20 particles
    end
end


wait(1.0)
red4:Destroy()
end)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18460952794"
sound.Parent = game.Workspace
sound:Play()
delay(13, function()
sound:Destroy()
end)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18460863844"
sound.Parent = game.Workspace
sound:Play()
delay(3, function()
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18460893321"
sound.Parent = game.Workspace
sound:Play()
end)
wait(7.5)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18461671633"
sound.Parent = game.Workspace
sound:Play()
delay(7.1, function()
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18461821277"
sound.Parent = game.Workspace
sound:Play()
end)
wait(8)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18462018744"
sound.Parent = game.Workspace
sound:Play()
wait(1.8)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18462312002"
sound.Parent = game.Workspace
sound:Play()
wait(1.48)
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://18462330981"
sound.Parent = game.Workspace
sound:Play()
end)
wait(1.4)
local r = game:GetService("RunService")
local t = game:GetService("TweenService")
local c = workspace.CurrentCamera
local h = game.Players.LocalPlayer.Character

local function s(d)
    if not d then return end

    local o = c.CFrame
    local e = 0
    local con

    h.Humanoid.AutoRotate = false
    c.CameraType = Enum.CameraType.Scriptable

    con = r.RenderStepped:Connect(function(dt)
        e = e + dt * 60
        local k = d[math.ceil(e)]

        if k then
            t:Create(c, TweenInfo.new(0.0005, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
                CFrame = h.HumanoidRootPart.CFrame * k.cframe,
                FieldOfView = k.fov
            }):Play()
        else
            con:Disconnect()
            h.Humanoid.AutoRotate = true
            c.CameraType = Enum.CameraType.Custom
            c.CFrame = o
        end
    end)
end

local m = require(game.ReplicatedStorage.Cutscenes["Five Season Startup"])

local d = m
if d then
    s(d)
end
wait(11)
local r = game:GetService("RunService")
local t = game:GetService("TweenService")
local c = workspace.CurrentCamera
local h = game.Players.LocalPlayer.Character

local function s(d)
    if not d then return end

    local o = c.CFrame
    local e = 0
    local con

    h.Humanoid.AutoRotate = false
    c.CameraType = Enum.CameraType.Scriptable

    -- Track how long the cutscene has been running
    local startTime = tick()

    con = r.RenderStepped:Connect(function(dt)
        e = e + dt * 60
        local k = d[math.ceil(e)]

        if k then
            t:Create(c, TweenInfo.new(0.0005, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
                CFrame = h.HumanoidRootPart.CFrame * k.cframe,
                FieldOfView = k.fov
            }):Play()
        else
            -- If there's no more data to use, disconnect
            con:Disconnect()
            -- Restore camera settings
            c.FieldOfView = 70
            h.Humanoid.AutoRotate = true
            c.CameraType = Enum.CameraType.Custom
            c.CFrame = o
        end

        -- Check if 3 seconds have passed
        if tick() - startTime >= 6 then
            con:Disconnect()
            -- Restore camera settings
            c.FieldOfView = 70
            h.Humanoid.AutoRotate = true
            c.CameraType = Enum.CameraType.Custom
            c.CFrame = o
        end
    end)
end

local m = require(game.ReplicatedStorage.Cutscenes["Five Season Attack"])

local d = m
if d then
    s(d)
end
task.spawn(function()
wait(1)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui

-- Create bottom layer image
local bottomImage = Instance.new("ImageLabel")
bottomImage.Image = "rbxassetid://18461885601"
bottomImage.Position = UDim2.new(0, 0, 0, -50)  -- Top left corner
bottomImage.Size = UDim2.new(1, 0, 1, 100)  -- Full screen
bottomImage.BackgroundTransparency = 1  -- Make the background transparent
bottomImage.Parent = ScreenGui  -- Parent to ScreenGui

-- Wait 0.8 seconds before showing the top layer image
wait(0.8)

-- Create top layer image
local t = game:GetService("TweenService")

-- Create the top image
local topImage = Instance.new("ImageLabel")
topImage.Image = "rbxassetid://17356805968"
topImage.Position = UDim2.new(0, 0, 0, -50)  -- Top left corner
topImage.Size = UDim2.new(1, 0, 1, 100)  -- Full screen
topImage.BackgroundTransparency = 1  -- Make the background transparent
topImage.ImageTransparency = 1  -- Start fully transparent
topImage.Parent = ScreenGui  -- Parent to ScreenGui

-- Create the fade-in tween
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)  -- 1-second fade-in
local tween = t:Create(topImage, tweenInfo, {ImageTransparency = 0})

-- Play the tween to fade in the image
tween:Play()

-- Wait 2 seconds before destroying the ScreenGui
wait(1.3)
ScreenGui:Destroy()
end)
wait(4)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local ImpactFrames = Instance.new("Folder")
ImpactFrames.Name = "ImpactFrames"
ImpactFrames.Parent = ScreenGui

local Cooldown = 0 -- how much time till it vanishes (in seconds)
local Speed = 0.03 -- how much time per image to play (in seconds)

local imageIds = {
    "rbxassetid://17346970224", "rbxassetid://17347684206", "rbxassetid://17347686924", 
    "rbxassetid://17347690212", "rbxassetid://17347685782", "rbxassetid://17347708539", 
    "rbxassetid://17347708315", "rbxassetid://17347707975", "rbxassetid://17347707700", 
    "rbxassetid://17347707474", "rbxassetid://17347707209", "rbxassetid://17347707014", 
    "rbxassetid://17347706806", "rbxassetid://17347706466", "rbxassetid://17347706137", 
    "rbxassetid://17347705829", "rbxassetid://17347705579", "rbxassetid://17347705251", 
    "rbxassetid://17347704883", "rbxassetid://17347704516", "rbxassetid://17347704069", 
    "rbxassetid://17347703745", "rbxassetid://17347703368", "rbxassetid://17347703007", 
    "rbxassetid://17347702728", "rbxassetid://17347702433", "rbxassetid://17347702120", 
    "rbxassetid://17347701445", "rbxassetid://17347701136", "rbxassetid://17347700792", 
    "rbxassetid://17347700354", "rbxassetid://17347700035", "rbxassetid://17347699788", 
    "rbxassetid://17347699461", "rbxassetid://17347699145", "rbxassetid://17347698620", 
    "rbxassetid://17347698120", "rbxassetid://17347697854", "rbxassetid://17347697646"
}

-- Create ImageLabels for each image ID
for i = 1, #imageIds do
    local ImageLabel = Instance.new("ImageLabel")
    ImageLabel.Name = tostring(i)
    ImageLabel.Size = UDim2.new(0.005, 0, 0, 0)  -- Set initial size
    ImageLabel.Position = UDim2.new(0, 0, 0, 0)  -- Set initial position
    ImageLabel.ImageTransparency = 0
    ImageLabel.BackgroundTransparency = 1
    ImageLabel.Visible = true
    ImageLabel.Parent = ImpactFrames
    ImageLabel.Image = imageIds[i]
    task.wait()
end

-- Play each image sequentially with specified speed
for i = 1, #ImpactFrames:GetChildren() - 1 do
    local currentImage = ImpactFrames:GetChildren()[i]
    currentImage.Size = UDim2.new(1, 0, 1, 100) -- Set size during play
    currentImage.Position = UDim2.new(0, 0, 0, -100) -- Set position during play
    task.wait(Speed) -- Wait for the defined speed time
    currentImage.ImageTransparency = 1 -- Make it transparent after displaying
end

-- Handle the last image separately to ensure it stays visible
local lastImage = ImpactFrames:GetChildren()[#ImpactFrames:GetChildren()]
lastImage.Size = UDim2.new(1, 0, 1, 100) -- Set size during play for the last image
lastImage.Position = UDim2.new(0, 0, 0, -100) -- Set position during play for the last image
task.wait(Speed) -- Wait for the last image's display time
-- Instead of immediately making it transparent, wait for the cooldown time
task.wait(Cooldown)
lastImage.ImageTransparency = 1

-- Finally, destroy the ScreenGui
ScreenGui:Destroy()
delay(4, function()
game.Workspace.CurrentCamera.FieldOfView = 70
end)
